
.board-group .task-preview {
  display: grid;
  grid-template-columns: $table-grids;
  position: relative;
  .task-sticky:not(.add-task-container)::before {
      content: '';
      position: absolute;
      top: 0.7px;
      right: 0;
      left: 0;
      bottom: 0px;
      z-index: -1;
      background-color: #fff;
    }
    .task-sticky:not(.add-task-container,.first-task-sticky) {
      background-color: $color-divider;
    }
    .task-sticky.first-task-sticky {
      background-color: #fff;
    }
  .menu-btn-container {
    justify-self: center;
    align-self: center;
    left: 12px;
    top: 6.8px;
  }
  .task {
    &:not(:first-of-type) {
      width: $group-column-width;
    }
    &:focus-within {
      box-shadow: inset 0 0 0 1px $group-header-clr;
    }
    cursor: pointer;
    // border: 1px solid $color-divider;
    // border-inline-start: 1px solid $color-divider;
    &:not(.add-task-container) {
      border-inline-end: 1px solid $color-divider;
    }
    height: $group-row-height;
    display: flex;
    justify-content: center;
    align-items: center;

    &:hover .menu-btn-container {
      opacity: 1;
    }

    .profile-div {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .profile-div img,
    .profile-div svg {
      margin-inline-end: -6px;
    }

    .status,
    .priority {
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      color: white;
    }

    .priority {
      background-color: $color-empty-label;

      align-items: flex-end;
      gap: 2px;

      span{
          height: 17px;
      }

      &.Critical {
        background-color: $color-critical;
      }

      &.High {
        background-color: $color-high;
      }

      &.Medium {
        background-color: $color-medium;
      }

      &.Low {
        background-color: $color-low;
      }
    }

    .status {
      &.empty {
        background-color: $color-empty-label;
      }

      &.working {
        background-color: $color-working-on-it;
      }

      &.stuck {
        background-color: $color-stuck;
      }

      &.done {
        background-color: $color-done;
      }
    }
  }
  &:hover .task :is(.priority,.status) {
    .label {
      opacity: 0.75;
    }
  }
  
  &:focus-within:not(.add-task) {
    input[type='checkbox'] {
      // &::before {
      // content: "";
      // position: absolute;
      // left: 0;
      // top: 0;
      // translate: -50% -50%;
      // width: 16px;
      // height: 16px;
      // }
      background-color: $color-focused-within;
    }
    background-color: $color-focused-within;
  }
  .task-preview .task-title-container {
    box-shadow: 0 1px 1px $color-divider;
  }
  .task-title-container {
      display: grid;
      grid-template-columns: 33px 300px 67px;
  
      .task-preview-color {
        position: absolute;
        top: 0;
        left: -6px;
        width: 6px;
        height: 102%;
        background-color: $group-header-clr;
        &.last-task{
          border-bottom-left-radius: 5px;
          opacity: 0.75;
        }
      }
  
  
  
      .task-title {
        .task-title-input {
          width: 275px;
          font: inherit;
          color: inherit;
        }
      }
  
      .task-details-icon {
        width: 64px;
        height: 100%;
        @include flex-center;
        border-inline-start: 1px solid $color-divider;
  
        .add-update {
          &:hover {
            color: #0073ea;
          }
  
          width: 24px;
          height: 24px;
          cursor: pointer;
          color: $color-empty-label;
          font-size: 24px;
        }
      }
    }
        &:hover {
          .task-sticky::before {
            background-color: $color-highlighted;
          }
    
          background-color: $color-highlighted;
    
          & .menu-btn-container {
            opacity: 1;
          }
    
          .task-preview-color.last-task {
            opacity: 1;
          }
        }
}
.task-preview {
  box-shadow: 0 1px 1px $color-divider;
}
.task-preview.add-task {
  border-block-end: 1px solid $color-divider;
  border-inline-end: 1px solid $color-divider;
  box-shadow: $small-shadow;
}
// .animated .task-preview {
//   border: 1px solid red;
// }